openapi: 3.0.3
info:
  title: Tasks
  description: |-
    Api Crud Task
    -
  version: 1.0-SNAPSHOT
servers:
  - url: http//localhost:8080
tags:
  - name: task
    description: Operations for Task CRUD

paths:
  /auth:
    get:
      tags:
        - Auth
      summary: Authorization Endpoint
      description:  Authorization Endpoint
      operationId: Auth
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: ID Task
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'

        500:
          description: Generic Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /task:
    get:
      tags:
        - task
      summary: Get task information
      description: Get List of Task
      operationId: getAllTask
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - task
      summary: add task
      description: create Task and assign to user
      operationId: addTask
      requestBody:
        description: Create Task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        201:
          description: Success


        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - task
      summary: Update task to ID
      description: Update task seg√∫n su ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /task/{id}:
    get:
      tags:
        - task
      summary: Get task information By ID
      description: Get task information using ID
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID Task
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'


        404:
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - task
      summary: Delete Taks to ID
      description: delete a Task by ID.
      operationId: deleteTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID Task
      responses:
        204:
          description: Delete Task Successful

components:
  schemas:
    Auth:
      type: object
      properties:
        jwt:
          type: string
    Task:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          minLength: 1
        description:
          type: string
        priority:
          type: string
        user:
          type: string
        status:
          type: string
      required:
        - name
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        exception:
          type: string
    TaskSuccessful:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message